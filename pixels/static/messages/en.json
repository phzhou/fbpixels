{
    "select_language": "Language:",
    "page_title": "Facebook Pixel Samples",
    "page_title_caption": "Samples for various Facebook pixel implementation",
    "overview_title": "Overview",
    "overview_p_1": "There are two types of Facebook pixels currently, the <a href='#wcapixel'>custom audience pixels<\/a> and the <a href='#conversionpixel'>conversion tracking pixels<\/a>.",
    "overview_p_2": "A Facebook pixel will trigger a HTTP request to a Facebook server end point, with information about the viewer. The data in the pixel will be processed and Facebook server will try to match it with a Facebook user.",
    "overview_p_3": "In case of the custom audience pixel, the matched user will be added to the relevant website custom audiences. You can filter the pixel traffic with filtering rules against the URL and other custom data passed in the pixel.",
    "overview_p_4": "Conversion pixels include conversion value. Facebook server will look up the relevant ad impression or click history and attribute this conversion event to the ad campaign for you. The attributed conversions can then be viewed in the reports at ads manager.",
    "overview_p_5": "The Facebook Pixel Helper is a troubleshooting tool that helps you to validate the Facebook pixels placed on your site. You can read the <a href='https:\/\/developers.facebook.com\/docs\/ads-for-websites\/pixel-troubleshooting'>guide document<\/a> on our developer site for more details.",
    "cvrp_title": "Conversion Pixels",
    "cvrp_p_1": "Thank you for coming to this page and thus we fired a conversion pixel at this page. The pixel code is shown below. You can find a comprehensive guide about conversion pixels <a href='https:\/\/www.facebook.com\/help\/435189689870514\/'>here<\/a>.",
    "cvrp_p_2": "Notice that this pixel looks similar to the WCA pixel. The pixel code also includes the initialization of Facebook JavaScript SDK, the event triggering code and the image pixel. In the event triggering code in <code>line 14<\/code>, the <code>'track'<\/code> parameter denotes the pixel event type, the number <code>6013916973461<\/code> is the conversion pixel ID and the last JSON object <code>{'value':'0.00','currency':'USD'}<\/code> is the values for the actual conversion event.",
    "cvrp_p_3": "Normally you can place this pixel on the page where the transaction is done, e.g. the payment result page or thank you page. Try to put in the real values in the value parameter so that it shows up in the ad reports.",
    "cvrp_title_1": "Dynamic Conversion Events",
    "cvrp_p_4": "Alternatively, you can also make it triggered by user's interaction with the page, for example a click on the 'add to cart' button. Below are some samples of triggering conversion event dynamically.",
    "conversion_panel_head_1": "Conversion event on button click",
    "cvrp_p_5": "Some product",
    "cvrp_p_6": "Price: 100",
    "cvrp_p_7": "Select number:",
    "conversion_panel_head_2": "Conversion event based on different buttons",
    "cvrp_p_8": "Following buttons will trigger different conversion events:",
    "gtm_title": "Tag Managers",
    "gtm_p_1": "Our pixel supports various tag managers. You can add our pixel into the tag manager as a generic HTML tag.",
    "gtm_p_2": "Let's take the Google tag manager for example, and try to add the WCA pixel into it. In the Google tag manager, choose to add a new tag to your container. At the tag type drop down menu, choose 'Custom HTML Tag'. In the HTML code input box, copy and paste the pixel code inside. It will look like this:",
    "dpa_title": "Dynamic Product Ads",
    "dpa_p_1": "Dynamic Ads allow advertisers to create Link or multi-product ads that are rendered and targeted based on a set of products. The ads are rendered based on a template and filled in by product metadata. They are targeted based upon a set of actions that a person has taken on that product or product group.",
    "dpa_p_2": "For example, Dynamic Product Ads allow you to serve users an ad for exactly the product they have left in their cart, without creating an individual ad for each product SKU.",
    "dpa_p_3": "For references, check out the <a href='https:\/\/developers.facebook.com\/docs\/marketing-api\/dynamic-product-ads\/'>Dynamic Product Ads document<\/a> and our <a href='https:\/\/developers.facebook.com\/ads\/blog\/post\/2015\/02\/17\/introducing-dynamic-product-ads\/'>ad tech blog post<\/a>.",
    "dpa_p_4": "In a nutshell, the whole process of creating DPA would be:",
    "dpa_p_5": "You will be able to setup the ad templates in native tools or API and the preview is like this:",
    "dpa_p_6": "And finally the dynamic product ad will look like this to the users:",
    "dpa_p_7": "For this document, let's focus on how to implement the right pixel events.",
    "dpa_p_8": "Dynamic Product Ads use <a href='https:\/\/developers.facebook.com\/docs\/ads-for-websites\/website-custom-audiences\/getting-started'>Custom Audience Pixel<\/a> events and Mobile App Events for iOS and Android, with additional requirements.",
    "dpa_p_9": "A minimum of three required events must be added to your website:",
    "dpa_p_10": "These events should be sent with the following data parameters:",
    "dpa_p_11": "It's important that the <code>content_type<\/code> matches the type of id(s) included in the <code>content_ids<\/code> parameter.",
    "dpa_p_12": "See <a href='https://developers.facebook.com/docs/marketing-api/dynamic-product-ads/product-audiences/'>Product Audiences<\/a> for more details on pixel events that are required for DPA.",
    "dpa_p_13": "An example event <code>ViewContent<\/code> pixel event:",
    "dpa_p_14": "An example event <code>AddToCart<\/code> pixel event depends on how your eCommerce platform handles adding an item to a cart. If a separate page is loaded when add to cart then the pixel event can be fired like normal:",
    "dpa_p_15": "Or you can fire the add to cart event dynamically on button click for example:",
    "dpa_p_16": "An example event <code>Purchase<\/code> pixel event:",
    "dpa_p_17": "For example if I have a small shop selling a few game consoles: PlayStation 4, Xbox One and Nintendo 3DS XL, and there product ids are <code>ps4<\/code>, <code>xbox<\/code> and <code>3ds<\/code>, in my SKU system and the catalog data.",
    "dpa_p_18": "Now we need to prepare the event code as mentioned above for dynamic triggering. Similar to other chapters, we can wrap the actual event firing part of the pixel code into JavaScript functions and call them dynamically when event happens, for example:",
    "dpa_p_19": "Of course you don't have to copy the alert part, they are just for demo purpose =D",
    "dpa_p_20": "Here is a sample implementation for the shop and the pixel events, try to view different products, add them to cart and checkout to see the events firing in the Pixel Helper plugin or network monitor tool in your browser.",
    "dpa_li_1": "Upload your Product Catalog to your Business Manager",
    "dpa_li_2": "Include Product IDs in your <a href='https:\/\/developers.facebook.com\/docs\/marketing-api\/dynamic-product-ads\/product-audiences\/#setuppixel'>Pixel and App events<\/a>",
    "dpa_li_3": "Create a Product Set and an ad template that will be dynamically rendered based on your product data",
    "dpa_li_4": "The Dynamic Product Ad will render the right product(s) to the right person, regardless of the device they are using",
    "up_title": "Custom Audience Pixels",
    "up_p_1": "You can read the <a href='https:\/\/developers.facebook.com\/docs\/ads-for-websites\/website-custom-audiences\/getting-started'>document<\/a> for a more detailed guide for website custom audiences and pixel creation. In addition, always refer to the website custom audiences <a href='https:\/\/developers.facebook.com\/docs\/ads-for-websites\/website-custom-audiences\/planning'>planning guide<\/a> when you plan about where to put pixels and what data to track. You should place the pixel code at as many places as possible on your website. The pixel code will look something like this:",
    "up_p_2": "Note that <code>line 8<\/code> here initialize the pixel and <code>line 9<\/code> actually fires the event. We would make use of this in the dynamic events section below.",
    "up_p_3": "This pixel is built on top of the previous remarketing pixel. We upgraded this per-site pixel with these new functionalities:",
    "up_p_4": "<strong>Standard events<\/strong> - We are introducing 9 predefined standard events representing common actions taken on websites. These standard events are optional, but enable you to track these events in ads for measurement and use for optimization. You can also create website custom audiences more effectively without worrying about URL matching.",
    "up_p_5": "<strong>Easier to troubleshoot<\/strong> - The new JavaScript library (<code>fbevents.js<\/code>) includes a set of function calls and parameter validation for the list of predefined standard events to make sure all the required information are provided before sending to Facebook, reducing the chance of errors.",
    "up_p_6": "<strong>Website traffic dashboard<\/strong> - We are exposing some useful breakdowns on the activities we collected from a Facebook pixel in a dashboard to help advertisers diagnose pixel installation issues more effectively.",
    "up_p_7": "<strong>Pixel Sharing<\/strong> - Advertisers working with multiple agencies can use Business Manager to manage their pixels as assets. They can share and manage permissions of the pixel with other ad accounts or business accounts so that they can create their own custom audiences without the need to install multiple pixels on the website.",
    "up_p_8": "Unused",
    "up_p_9": "Unused",
    "up_p_10": "Unused",
    "up_p_11": "If you have installed the remarketing pixel code on your website, your custom audiences will continue to work without the need of pixel code upgrade. To leverage <strong>conversion capabilities<\/strong>, we recommend to upgrade the base code and send standard events through one of the predefined functions supported by the pixel. For DPA advertisers who already installed the remarketing pixel and send the standard <code>ViewContent<\/code>, <code>AddToCart<\/code>, and <code>Purchase<\/code> events, they can start leveraging conversion capabilities as soon as they set the correct tracking and optimization specs in ad.",
    "up_p_12": "We are introducing a set of predefined website events you can send through Facebook Pixel. These events are standardized based on the event name. With the updated JS code & library (<code>fbevents.js<\/code>), an advertiser can use the corresponding function call to report a standard event to Facebook.",
    "up_p_13": "Unused",
    "up_p_14": "When a key page is viewed such as a product page, e.g. landing on a product detail page",
    "up_p_15": "When a search is made, e.g. should this be the product search query from audience in the ecomm site?",
    "up_p_16": "When a product is added to the shopping cart, e.g. click \/ LP on add to cart button",
    "up_p_17": "When a product is added to a wishlist, e.g. click \/ LP on add to wishlist button",
    "up_p_18": "When a person enters the checkout flow prior to completing the checkout flow, e.g. click \/ LP on checkout button",
    "up_p_19": "When a payment information is added in the checkout flow, e.g. click \/ LP on save billing info button",
    "up_p_20": "When a purchase is made or checkout flow is completed, e.g. landing on &quot;thank you&quot; \/ confirmation page",
    "up_p_21": "When a sign up is completed, e.g. click \/ LP on pricing, signup for trial",
    "up_p_22": "When a registration form is completed, e.g. complete subscription \/ signup for a service",
    "up_p_23": "Unused",
    "up_p_24": "You can report a custom events through Facebook Pixel and be used for creating website custom audiences. <strong>However, we don't support conversion tracking, reporting, and optimization directly through these custom events<\/strong>.",
    "up_p_25": "Any custom events a person chooses to report",
    "up_p_26": "Another major use case for website custom audiences is segmenting users based on events such as button clicks that do not certainly lead to page redirects. In fact we can use the JavaScript code in the pixel to fire events dynamically. Here are a couple of examples for firing events dynamically:",
    "up_p_27": "Assuming you have initialized the pixel on the page by using the following code:",
    "up_p_28": "Now with your pixels setup with event data, let's see how to create website site custom audiences using them. Go to your ads manager or power editor and open the audiences management page. Click on <code>Create Audiences<\/code> -> <code>Custom Audiences<\/code> -> <code>Website Traffic<\/code>, you should see a pop up window like this:",
    "up_p_29": "Select <code>Custom Combination<\/code> here and you will see screen like this:",
    "up_p_30": "Select <code>Event<\/code> in the drop down menu. After your pixel accumulated some traffic with custom data, you will be able to select the different events, for example the <code>ButtonClick<\/code> and <code>Select<\/code> events we demonstrated above.<\/p>",
    "up_p_31": "Choose the event you want and the list of parameters in the accumulated traffic will appear in the typeahead. The below screen shot shows how to create a WCA that includes the people who clicked on <code>button 1<\/code> showed above.",
    "up_p_32": "Fill in the rest information and hit save. This WCA will be created similar to the normal WCAs and ready to be used once it is able to match certain number of users.",
    "up_p_33": "You can then do the following:"
}